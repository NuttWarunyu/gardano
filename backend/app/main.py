import os
import openai
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from app.routes import analyze, affiliate  # ‚úÖ ‡πÅ‡∏¢‡∏Å Route ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ

# ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ OPENAI_API_KEY ‡∏à‡∏≤‡∏Å Environment Variables
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not OPENAI_API_KEY:
    raise ValueError("‚ùå ERROR: OPENAI_API_KEY is not set! Please check your environment variables.")

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key ‡πÉ‡∏´‡πâ OpenAI Client
openai.api_key = OPENAI_API_KEY

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á FastAPI App
app = FastAPI()

# ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï CORS ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á `localhost` ‡πÅ‡∏•‡∏∞ `Render`
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:5173",  # ‚úÖ Vite
        "http://localhost:3000",  # ‚úÖ React Dev Server
        "https://gardano-frontend.onrender.com"  # ‚úÖ Frontend ‡∏ö‡∏ô Render
    ],  
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ‚úÖ ‡∏£‡∏ß‡∏° API Routes
app.include_router(analyze.router, prefix="/api")
app.include_router(affiliate.router, prefix="/api")

@app.get("/")
def root():
    return {"message": "üöÄ Gardano API is running!"}